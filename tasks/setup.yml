---
#info: Install fastpkg offline via Ansible host
- name: Repack fastpkg on Ansible host
  connection: local
  shell: |
    cd /tmp || exit 1
    REPACK=$(dpkg-repack fastpkg 2>/dev/stdout 1>/dev/null || true)
    if [ -z "$REPACK" ]; then
        : # ok
    elif echo "$REPACK" | grep -q "Identifier removed"; then
        : # ok
    else
        echo "dpkg-repack fastpkg: $REPACK"
        exit 1
    fi
    PACKAGE=$(find . -name "fastpkg_*.deb" 2>/dev/null)
    if [ -n "$PACKAGE" ]; then
        mv -f "$PACKAGE" fastpkg.deb || exit 1
    else
        echo "file /tmp/fastpkg.deb not found"
        exit 1
    fi
  register: shell_fastpkg_install
  run_once: true
  become: false
  changed_when: false
  failed_when: false

- debug:
    msg: |
      OUT: {{ shell_fastpkg_install.stdout }}
      ERR: {{ shell_fastpkg_install.stderr }}
  when: servermonkey_debug and shell_fastpkg_install.stdout != "" or shell_fastpkg_install.stderr != ""

- name: Fail dpkg-repack
  fail:
    msg: "dpkg-repack failed"
  failed_when: shell_fastpkg_install.stdout != "" or shell_fastpkg_install.stderr != ""

- block:
    - name: Copy fastpkg (Debian)
      copy:
        src: /tmp/fastpkg.deb
        dest: /tmp/fastpkg.deb
        mode: 0600
      changed_when: false

    - name: Install fastpkg (Debian)
      apt:
        deb: /tmp/fastpkg.deb
  when: ansible_os_family == 'Debian'

- block:
    - name: Install fastpkg (Windows)
      copy:
        src: /usr/local/bin/fastpkg
        dest: /bin/fastpkg
        mode: 0755

    - name: Make fastpkg compatible with Python 2 (Windows)
      replace:
        path: /bin/fastpkg
        regexp: '#!/usr/bin/env python3'
        replace: '#!/usr/bin/env python2'

    - name: Find dtrx in fastpkg repo
      connection: local
      shell: fastpkg -qp fastpkg-dtrx show -d
      register: fastpkg_setup_dtrx_path

    - name: Install dtrx (Windows)
      copy:
        src: "{{ fastpkg_setup_dtrx_path.stdout }}"
        dest: /bin/dtrx
        mode: 0755
  when: '"CYGWIN" in ansible_os_family'